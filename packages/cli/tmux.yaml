name: tmux
version: 3.5a
commit: 096c4b3e63ebdcd4127a6fa9933365d4c9c194ba
description: Terminal multiplexer for managing multiple terminal sessions.
homepage: https://github.com/tmux/tmux
license: ISC
maintainer: tmux-community
updated_at: "2025-03-29T01:22:11Z"
tags:
  - cli
  - terminal
  - multiplexer
install:
  source:
    type: git
    url: https://github.com/tmux/tmux.git
    ref: master
  steps:
    - git clone https://github.com/tmux/tmux.git .
    - sh autogen.sh
    - ./configure
    - make
    - mkdir -p man/man1
    - cp tmux.1 man/man1/
  binaries:
    - tmux
  additional-config:
    - filename: config.sh
      content: |
        #!/usr/bin/env bash

        BASE_PATH=$(grep 'base:' "$HOME/.config/clipack/config.yaml" | sed 's/.*base: //')

        if [ -z "$THEME" ]; then
            THEME="LvimDark"
        fi

        export TMUX_CONF="$BASE_PATH/configs/tmux/tmux.conf"

        TARGET="$HOME/.tmux.conf"

        if [ -L "$TARGET" ]; then
            CURRENT_LINK=$(readlink "$TARGET")
            if [ "$CURRENT_LINK" != "$TMUX_CONF" ]; then
                rm "$TARGET"
                ln -s "$TMUX_CONF" "$TARGET"
            fi
        elif [ -e "$TARGET" ]; then
            rm -rf "$TARGET"
            ln -s "$TMUX_CONF" "$TARGET"
        else
            ln -s "$TMUX_CONF" "$TARGET"
        fi

        alias tm="tmux attach -t SYSTEM || tmux new -s SYSTEM"
        alias ta="tmux a -t SYSTEM"
        alias tn="tmux new-session"

        if [ -n "$TMUX" ]; then
            if [ -f "$BASE_PATH/configs/tmux/$THEME.conf" ]; then
                tmux source-file "$BASE_PATH/configs/tmux/$THEME.conf"
            fi
            if [ -f "$TMUX_CONF" ]; then
                tmux source-file "$TMUX_CONF"
            fi
        fi
    - filename: tmux.conf
      content: |
        # ==========================
        # ===  General settings  ===
        # ==========================

        set -g default-shell "/bin/zsh"
        set -g default-terminal "kitty"
        set -ag terminal-overrides ",kitty:Tc"
        set-option -g focus-events on
        set -g history-limit 20000
        set -g buffer-limit 20
        set -sg escape-time 0
        set -g display-time 1500
        set -g remain-on-exit off
        set -g repeat-time 300
        setw -g allow-rename off
        setw -g automatic-rename off
        setw -g aggressive-resize on
        set -sa terminal-overrides ',*:Smulx=\E[4::%p1%dm'
        set -sa terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'
        set -g set-titles on
        set -g set-titles-string "#I:#W"
        set -g window-status-separator ""
        set -g base-index 1
        setw -g pane-base-index 1
        set -g mouse on
        set-option -g status-position bottom

        # ==========================
        # ===   Key bindings     ===
        # ==========================

        set-option -g prefix C-s
        bind C-s send-prefix
        unbind C-b
        unbind "\$"     # rename-session
        unbind ,        # rename-window
        unbind %        # split-window -h
        unbind '"'      # split-window
        unbind \}       # swap-pane -D
        unbind \{       # swap-pane -U
        unbind [        # paste-buffer
        unbind ]
        unbind "'"      # select-window
        unbind n        # next-window
        unbind p        # previous-window
        unbind l        # last-window
        unbind y
        unbind M-n      # next window with alert
        unbind M-p      # next window with alert
        unbind o        # focus thru panes
        unbind &        # kill-window
        unbind "#"      # list-buffer
        unbind =        # choose-buffer
        unbind z        # zoom-pane
        # unbind M-Up     # resize 5 rows up
        # unbind M-Down   # resize 5 rows down
        # unbind M-Right  # resize 5 rows right
        # unbind M-Left   # resize 5 rows left
        unbind-key -T root MouseDown3Pane

        # Edit configuration and reload
        bind C-e new-window -n '~/clipack/configs/tmux/tmux.conf' "sh -c '\${EDITOR:-vim} ~/clipack/configs/tmux/tmux.conf && tmux source ~/clipack/configs/tmux/tmux.conf && tmux display \"Config reloaded\"'"

        # Reload tmux configuration
        bind M-r source-file ~/clipack/configs/tmux/tmux.conf \; display "Config reloaded"

        # new window and retain cwd
        bind c new-window -c "#{pane_current_path}"

        # Rename session and window
        bind r command-prompt -I "#{window_name}" "rename-window '%%'"
        bind R command-prompt -I "#{session_name}" "rename-session '%%'"

        # Split panes
        bind h split-window -h -c "#{pane_current_path}"
        bind v split-window -v -c "#{pane_current_path}"

        # Select pane and windows
        bind -r C-n next-window
        bind -r C-p previous-window
        bind -r Tab last-window

        bind -r C-j swap-pane -t '{down-of}'
        bind -r C-k swap-pane -t '{up-of}'
        bind -r C-l swap-pane -t '{right-of}'
        bind -r C-h swap-pane -t '{left-of}'

        # Move
        is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
        bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
        bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
        bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
        bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
        tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
        if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
            "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
        if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
            "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

        bind-key -T copy-mode-vi 'C-h' select-pane -L
        bind-key -T copy-mode-vi 'C-j' select-pane -D
        bind-key -T copy-mode-vi 'C-k' select-pane -U
        bind-key -T copy-mode-vi 'C-l' select-pane -R
        bind-key -T copy-mode-vi 'C-\' select-pane -l

        # Zoom pane
        bind + resize-pane -Z

        bind -r H resize-pane -L 5
        bind -r J resize-pane -D 5
        bind -r K resize-pane -U 5
        bind -r L resize-pane -R 5

        # Link / Unlink window
        bind K command-prompt -p "Link window from (session:window): " "link-window -s %% -a"
        bind O command-prompt -p "Unlink window (window index): " "unlink-window -t %%"

        # Swap panes back and forth with 1st pane
        # When in main-(horizontal|vertical) layouts, the biggest/widest panel is always @1
        bind \\ if '[ #{pane_index} -eq 1 ]' \
            'swap-pane -s "!"' \
            'select-pane -t:.1 ; swap-pane -d -t 1 -s "!"'

        # New session
        bind-key N command-prompt -p "Session name:" "new-session -s '%%'"

        # Kill pane/window/session shortcuts
        bind x kill-pane
        bind X kill-window
        bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
        bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

        # Merge session with another one (e.g. move all windows)
        # If you use adhoc 1-window sessions, and you want to preserve session upon exit
        # but don't want to create a lot of small unnamed 1-window sessions around
        # move all windows from current session to main named one (dev, work, etc)
        bind C-u command-prompt -p "Session to merge with: " \
          "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"

        # Detach from session
        bind d detach
        bind D if -F '#{session_many_attached}' \
            'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
            'display "Session has only 1 client attached"'

        # Hide status bar on demand
        bind C-b if -F '#{s/off//:status}' 'set status off' 'set status on'

        # ==================================================
        # === Window monitoring for activity and silence ===
        # ==================================================
        bind m setw monitor-activity \; display-message 'Monitor window activity [#{?monitor-activity,ON,OFF}]'
        bind M if -F '#{monitor-silence}' \
            'setw monitor-silence 0 ; display-message "Monitor window silence [OFF]"' \
            'command-prompt -p "Monitor silence: interval (s)" "setw monitor-silence %%"'

        # Activity bell and whistles
        set -g visual-activity on

        # TODO: Does not work as well, check on newer versions
        # set -g visual-silence on

        # BUG: bell-action other ignored · Issue #1027 · tmux/tmux · GitHub - https://github.com/tmux/tmux/issues/1027
        # set -g visual-bell on
        # setw -g bell-action other

        # ================================================
        # ===     Copy mode, scroll and clipboard      ===
        # ================================================

        # Prefer vi style key table
        setw -g mode-keys vi

        # Trigger copy mode by
        bind M-y copy-mode
        set-option -s set-clipboard off
        bind p paste-buffer
        bind-key -T copy-mode-vi v send-keys -X begin-selection
        bind-key -T copy-mode-vi y send-keys -X rectangle-toggle
        unbind -T copy-mode-vi Enter
        bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -se c -i'
        bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -se c -i'
        set -g @yank_action 'copy-pipe-no-clear'
        bind -T copy-mode    C-c send -X copy-pipe-no-clear "xsel -i --clipboard"
        bind -T copy-mode-vi C-c send -X copy-pipe-no-clear "xsel -i --clipboard"

        # ============================
        # ===       Plugins        ===
        # ============================
        set -g @plugin 'tmux-plugins/tpm'
        set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
        set -g @plugin 'tmux-plugins/tmux-online-status'
        set -g @plugin 'tmux-plugins/tmux-copycat'
        set -g @plugin 'tmux-plugins/tmux-open'
        set -g @plugin 'samoshkin/tmux-plugin-sysstat'
        set -g @plugin 'tmux-plugins/tmux-yank'
        set -g @plugin 'tmux-plugins/tmux-resurrect'
        set -g @plugin 'tmux-plugins/tmux-continuum'
        set -g @plugin 'sainnhe/tmux-fzf'
        set -g @plugin 'wfxr/tmux-fzf-url'
        set -g @plugin 'sturob/tmux-teleport'
        set -g @plugin 'vndmp4/tmux-fzf-session-switch'
        set -g @plugin 'alexwforsythe/tmux-which-key'
        set -g @fzf-goto-preview-enabled 'true'

        # Run all plugins' scripts
        run '~/.tmux/plugins/tpm/tpm'
    - filename: LvimDark.conf
      content: https://github.com/lvim-tech/lvim-colorscheme/blob/main/extras/tmux/LvimDark.conf
    - filename: LvimDarker.conf
      content: https://github.com/lvim-tech/lvim-colorscheme/blob/main/extras/tmux/LvimDarker.conf
    - filename: LvimKanagawa.conf
      content: https://github.com/lvim-tech/lvim-colorscheme/blob/main/extras/tmux/LvimKanagawa.conf
    - filename: LvimLight.conf
      content: https://github.com/lvim-tech/lvim-colorscheme/blob/main/extras/tmux/LvimLight.conf
